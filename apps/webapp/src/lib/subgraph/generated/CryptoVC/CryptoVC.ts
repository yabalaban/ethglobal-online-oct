// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ProjectCompleted extends ethereum.Event {
  get params(): ProjectCompleted__Params {
    return new ProjectCompleted__Params(this);
  }
}

export class ProjectCompleted__Params {
  _event: ProjectCompleted;

  constructor(event: ProjectCompleted) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ProjectCreated extends ethereum.Event {
  get params(): ProjectCreated__Params {
    return new ProjectCreated__Params(this);
  }
}

export class ProjectCreated__Params {
  _event: ProjectCreated;

  constructor(event: ProjectCreated) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get ethCollateralDeposit(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get fundingRequired(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get cid(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class ProjectFunded extends ethereum.Event {
  get params(): ProjectFunded__Params {
    return new ProjectFunded__Params(this);
  }
}

export class ProjectFunded__Params {
  _event: ProjectFunded;

  constructor(event: ProjectFunded) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get funder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ProjectStarted extends ethereum.Event {
  get params(): ProjectStarted__Params {
    return new ProjectStarted__Params(this);
  }
}

export class ProjectStarted__Params {
  _event: ProjectStarted;

  constructor(event: ProjectStarted) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get safe(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TrancheClaimed extends ethereum.Event {
  get params(): TrancheClaimed__Params {
    return new TrancheClaimed__Params(this);
  }
}

export class TrancheClaimed__Params {
  _event: TrancheClaimed;

  constructor(event: TrancheClaimed) {
    this._event = event;
  }

  get trancheId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get projectId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TrancheFailed extends ethereum.Event {
  get params(): TrancheFailed__Params {
    return new TrancheFailed__Params(this);
  }
}

export class TrancheFailed__Params {
  _event: TrancheFailed;

  constructor(event: TrancheFailed) {
    this._event = event;
  }

  get trancheId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get projectId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TrancheRequested extends ethereum.Event {
  get params(): TrancheRequested__Params {
    return new TrancheRequested__Params(this);
  }
}

export class TrancheRequested__Params {
  _event: TrancheRequested;

  constructor(event: TrancheRequested) {
    this._event = event;
  }

  get trancheId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get projectId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get claim(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class CryptoVC extends ethereum.SmartContract {
  static bind(address: Address): CryptoVC {
    return new CryptoVC("CryptoVC", address);
  }

  MIN_VALUE(): BigInt {
    let result = super.call("MIN_VALUE", "MIN_VALUE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MIN_VALUE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MIN_VALUE", "MIN_VALUE():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaultCurrency(): Address {
    let result = super.call(
      "defaultCurrency",
      "defaultCurrency():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_defaultCurrency(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "defaultCurrency",
      "defaultCurrency():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get defaultCurrency_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get umaOracle_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get savingsDai_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get sparkETHGateway_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get sparkPoolAddressesProvider_(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get safeFactory_(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get safeSingleton_(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get trustredForwarder_(): Address {
    return this._call.inputValues[7].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AssertionDisputedCallbackCall extends ethereum.Call {
  get inputs(): AssertionDisputedCallbackCall__Inputs {
    return new AssertionDisputedCallbackCall__Inputs(this);
  }

  get outputs(): AssertionDisputedCallbackCall__Outputs {
    return new AssertionDisputedCallbackCall__Outputs(this);
  }
}

export class AssertionDisputedCallbackCall__Inputs {
  _call: AssertionDisputedCallbackCall;

  constructor(call: AssertionDisputedCallbackCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class AssertionDisputedCallbackCall__Outputs {
  _call: AssertionDisputedCallbackCall;

  constructor(call: AssertionDisputedCallbackCall) {
    this._call = call;
  }
}

export class AssertionResolvedCallbackCall extends ethereum.Call {
  get inputs(): AssertionResolvedCallbackCall__Inputs {
    return new AssertionResolvedCallbackCall__Inputs(this);
  }

  get outputs(): AssertionResolvedCallbackCall__Outputs {
    return new AssertionResolvedCallbackCall__Outputs(this);
  }
}

export class AssertionResolvedCallbackCall__Inputs {
  _call: AssertionResolvedCallbackCall;

  constructor(call: AssertionResolvedCallbackCall) {
    this._call = call;
  }

  get assertionId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get assertedTruthfully(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class AssertionResolvedCallbackCall__Outputs {
  _call: AssertionResolvedCallbackCall;

  constructor(call: AssertionResolvedCallbackCall) {
    this._call = call;
  }
}

export class CreateProjectCall extends ethereum.Call {
  get inputs(): CreateProjectCall__Inputs {
    return new CreateProjectCall__Inputs(this);
  }

  get outputs(): CreateProjectCall__Outputs {
    return new CreateProjectCall__Outputs(this);
  }
}

export class CreateProjectCall__Inputs {
  _call: CreateProjectCall;

  constructor(call: CreateProjectCall) {
    this._call = call;
  }

  get cid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get fundingRequired(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateProjectCall__Outputs {
  _call: CreateProjectCall;

  constructor(call: CreateProjectCall) {
    this._call = call;
  }
}

export class FundProjectCall extends ethereum.Call {
  get inputs(): FundProjectCall__Inputs {
    return new FundProjectCall__Inputs(this);
  }

  get outputs(): FundProjectCall__Outputs {
    return new FundProjectCall__Outputs(this);
  }
}

export class FundProjectCall__Inputs {
  _call: FundProjectCall;

  constructor(call: FundProjectCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class FundProjectCall__Outputs {
  _call: FundProjectCall;

  constructor(call: FundProjectCall) {
    this._call = call;
  }
}

export class RequestTrancheCall extends ethereum.Call {
  get inputs(): RequestTrancheCall__Inputs {
    return new RequestTrancheCall__Inputs(this);
  }

  get outputs(): RequestTrancheCall__Outputs {
    return new RequestTrancheCall__Outputs(this);
  }
}

export class RequestTrancheCall__Inputs {
  _call: RequestTrancheCall;

  constructor(call: RequestTrancheCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get claim(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class RequestTrancheCall__Outputs {
  _call: RequestTrancheCall;

  constructor(call: RequestTrancheCall) {
    this._call = call;
  }
}
