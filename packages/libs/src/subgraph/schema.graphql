type ProjectCompleted @entity(immutable: true) {
  id: Bytes!
  projectId: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProjectCreated @entity(immutable: true) {
  id: Bytes!
  projectId: Bytes! # bytes32
  creator: Bytes! # address
  ethCollateralDeposit: BigInt! # uint256
  fundingRequired: BigInt! # uint256
  cid: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProjectFunded @entity(immutable: true) {
  id: Bytes!
  projectId: Bytes! # bytes32
  funder: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProjectStarted @entity(immutable: true) {
  id: Bytes!
  projectId: Bytes! # bytes32
  safe: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TrancheClaimed @entity(immutable: true) {
  id: Bytes!
  trancheId: Bytes! # bytes32
  projectId: Bytes! # bytes32
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TrancheFailed @entity(immutable: true) {
  id: Bytes!
  trancheId: Bytes! # bytes32
  projectId: Bytes! # bytes32
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TrancheRequested @entity(immutable: true) {
  id: Bytes!
  trancheId: Bytes! # bytes32
  projectId: Bytes! # bytes32
  amount: BigInt! # uint256
  claim: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
